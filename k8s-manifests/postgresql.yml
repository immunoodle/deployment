---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20G
---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql
stringData:
  POSTGRES_PASSWORD: IMMUNOODLE_POSTGRES_PASSWORD
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql
  labels:
    app: postgresql
data:
  init.sh: |
    #!/bin/bash
    set -e

    # Update pg_hba.conf
    sed -Ei 's/^(local|host)/#&/' $PGDATA/pg_hba.conf
    echo "hostnossl all           all             0.0.0.0/0  reject"                    >> $PGDATA/pg_hba.conf
    echo "hostssl   all           all             0.0.0.0/0  md5"                       >> $PGDATA/pg_hba.conf
    echo "hostssl   replication   all             0.0.0.0/0  md5"                       >> $PGDATA/pg_hba.conf
    echo "local     all           all                        trust"                     >> $PGDATA/pg_hba.conf

    sed -Ei 's/^#ssl = off/ssl = on/' $PGDATA/postgresql.conf
    sed -Ei "s/^#log_autovacuum_min_duration = 10min/log_autovacuum_min_duration = 0/" $PGDATA/postgresql.conf
    sed -Ei 's/^#log_connections = off/log_connections = on/' $PGDATA/postgresql.conf
    sed -Ei 's/^#log_disconnections = off/log_disconnections = on/' $PGDATA/postgresql.conf
    sed -Ei "s/^#log_line_prefix = .*/log_line_prefix = '%t [%p]: [%l-1] %quser=%u,db=%d,app=%a,client=%h '/" $PGDATA/postgresql.conf
    sed -Ei "s/^#log_lock_waits = off/log_lock_waits = on/" $PGDATA/postgresql.conf
    sed -Ei 's/^#log_min_duration_statement = -1/log_min_duration_statement = 1000/' $PGDATA/postgresql.conf
    sed -Ei 's/^#log_temp_files = -1/log_temp_files = 0/' $PGDATA/postgresql.conf
    sed -Ei "s/^#shared_preload_libraries = ''/shared_preload_libraries = 'pg_stat_statements,pg_buffercache'/" $PGDATA/postgresql.conf
    # Only use the following parameter if the result of `pg_test_timing` is very fast
    sed -Ei "s/^#track_io_timing = off/track_io_timing = on/" $PGDATA/postgresql.conf
    # Fix locals issues
    #sed -Ei "s/^(lc_messages.*)/#\1/" $PGDATA/postgresql.conf
    #sed -Ei "s/^(lc_time.*)/#\1/" $PGDATA/postgresql.conf
    #sed -Ei "s/^(lc_numeric.*)/#\1/" $PGDATA/postgresql.conf
    #sed -Ei "s/^(lc_monetary.*)/#\1/" $PGDATA/postgresql.conf

    openssl req -new -newkey rsa:4096 -nodes -out $PGDATA/server.csr -keyout $PGDATA/server.key -subj "CN=postgres.immunoodle.local"
    openssl x509 -in $PGDATA/server.csr -out $PGDATA/server.crt -req -signkey $PGDATA/server.key -days 3650
    chmod 600 $PGDATA/server.key
    chown postgres:postgres $PGDATA/server.key

    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" <<-EOSQL
      revoke all on database postgres from public;
      revoke all on database template0 from public;
      revoke all on database template1 from public;
      \c template1
      revoke all on schema public from public;
      \c postgres
      revoke all on schema public from public;
    EOSQL
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  labels:
    app: postgresql
spec:
  type: ClusterIP
  ports:
  - port: 5432
    name: postgresql
  selector:
    app: postgresql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  labels:
    app: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      imagePullSecrets:
      - name: regcred
      containers:
      - image: postgres:17.2
        imagePullPolicy: Always
        name: postgresql
        env:
        - name: PGDATA
          value: /var/lib/postgresql/data
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql
              key: POSTGRES_PASSWORD
        ports:
        - containerPort: 5432
          name: postgresql
        volumeMounts:
        - name: storage
          mountPath: /var/lib/postgresql/data
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d/
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: postgresql
      - name: init-scripts
        configMap:
          name: postgresql
          items:
            - key: init.sh
              path: init.sh
